Here are the syntaxes with examples for each **SQL category**:

---

### **1. DDL (Data Definition Language)**

#### **`CREATE`**

Used to create a new database object (e.g., table, view, index).

```sql
-- Create a new table called 'students'
CREATE TABLE students (
    student_id INT PRIMARY KEY,
    name VARCHAR(100),
    age INT
);
```

#### **`ALTER`**

Used to modify an existing database object.

```sql
-- Add a new column 'email' to the 'students' table
ALTER TABLE students ADD email VARCHAR(100);
```

#### **`DROP`**

Used to delete an existing database object.

```sql
-- Drop the 'students' table
DROP TABLE students;
```

#### **`TRUNCATE`**

Used to delete all rows from a table but keep the structure intact.

```sql
-- Truncate all records in 'students' table
TRUNCATE TABLE students;
```

---

### **2. DML (Data Manipulation Language)**

#### **`SELECT`**

Used to query the database and retrieve data.

```sql
-- Retrieve all students' names and ages
SELECT name, age FROM students;
```

#### **`INSERT`**

Used to insert data into a table.

```sql
-- Insert a new record into the 'students' table
INSERT INTO students (student_id, name, age, email)
VALUES (1, 'John Doe', 20, 'john.doe@example.com');
```

#### **`UPDATE`**

Used to modify existing data in a table.

```sql
-- Update the age of the student with student_id 1
UPDATE students SET age = 21 WHERE student_id = 1;
```

#### **`DELETE`**

Used to delete data from a table.

```sql
-- Delete the student with student_id 1
DELETE FROM students WHERE student_id = 1;
```

---

### **3. DCL (Data Control Language)**

#### **`GRANT`**

Used to give specific privileges to users.

```sql
-- Grant SELECT and INSERT privileges on 'students' table to user 'admin'
GRANT SELECT, INSERT ON students TO admin;
```

#### **`REVOKE`**

Used to remove specific privileges from users.

```sql
-- Revoke INSERT privilege on 'students' table from user 'admin'
REVOKE INSERT ON students FROM admin;
```

---

### **4. TCL (Transaction Control Language)**

#### **`COMMIT`**

Used to save the changes made in the current transaction.

```sql
-- Commit the transaction, making changes permanent
COMMIT;
```

#### **`ROLLBACK`**

Used to undo changes made in the current transaction.

```sql
-- Rollback the transaction, undoing any changes
ROLLBACK;
```

#### **`SAVEPOINT`**

Used to set a point within a transaction that you can roll back to.

```sql
-- Create a savepoint 'sp1' for rollback
SAVEPOINT sp1;

-- Rollback to 'sp1'
ROLLBACK TO SAVEPOINT sp1;
```

---

These syntaxes and examples should help you quickly review the core SQL categories. Let me know if you need further clarification!
